image: qwe1/debdocker:23.0
services:
  - name: docker:23.0-dind
    command: ["--experimental"]

variables:
  #DOCKER_HOST: tcp://docker:2376
  #DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  #DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_BUILDKIT: 1
  DOCKER_CLI_EXPERIMENTAL: enabled
  #BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.4.1/buildx-v0.4.1.linux-amd64

stages:
  - build
  - push
  - test

before_script:
  - export DATE=$(date -u +"%Y-%m-%d-%H-%M-%S")
  - mkdir -p $HOME/.docker/cli-plugins/
  # https://www.thegeekstuff.com/2011/10/grep-or-and-not-operators/
  - export BUILDX_URL="$(wget -O - https://api.github.com/repos/docker/buildx/releases/latest | grep 'browser_download_url.*https://github.com/docker/buildx/releases/download.*linux-amd64' | awk -F'"' '{print $4}')"
  - if [ -z "${BUILDX_URL}" ];then exit 1;fi
  - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
  - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
  - docker buildx version
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
  # https://gitlab.com/richardskumat/playground/-/jobs/2762899800
  - docker context create whatever
  - docker buildx create whatever
  ##
  - docker buildx create --use --driver docker-container --name whatever --platform=linux/amd64,linux/386,linux/arm/v7,linux/arm64
  - docker buildx inspect --bootstrap whatever
  - docker buildx ls
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin

build:
  stage: build
  script:
    # https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    # - docker buildx build --push -t qwe1/playground:latest -t qwe1/playground:$CI_COMMIT_SHORT_SHA -f Dockerfile --platform linux/amd64,linux/386,linux/arm/v7,linux/arm64 .
    - docker buildx build --load -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHORT_SHA -f Dockerfile --platform linux/amd64 .
    - docker buildx build --load -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHORT_SHA-alpine -f Dockerfile-alpine --platform linux/amd64 .
    - docker images
    - docker run --rm $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHORT_SHA google.com
    - docker run --rm $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHORT_SHA-alpine fb.com

push_to_dockerhub:
 stage: push
 only:
   - master
 script:
   - docker buildx build --push -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:latest-debian -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHA -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$DATE -f Dockerfile --platform linux/amd64,linux/arm/v7,linux/arm64 .
   - docker buildx build --push -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:latest -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHA-alpine -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$DATE-alpine -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:alpine -f Dockerfile --platform linux/amd64,linux/arm/v7,linux/arm64 .

test_docker_images:
  stage: test
  only:
   - master
  script:
    - docker run --rm $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHA google.com
    - docker run --rm $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHA-alpine fb.com
